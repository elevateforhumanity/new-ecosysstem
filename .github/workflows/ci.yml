name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Env Check
        run: |
          echo "JWT_SECRET=temporary_secret_1234567890123456789012345" > .env
          npm run env:check || true
      - name: Generate Prisma Client
        run: npx prisma generate || true
      - name: Lint
        run: npm run lint || true
      - name: Typecheck
        run: npm run typecheck || true
      - name: Tests
        run: npm test --silent
      - name: Build
        run: npm run build
      - name: SEO Polish
        run: npm run seo:polish || echo "seo polish skipped"
      - name: Bundle Size Budget
        run: npm run size:check
      - name: Size Check
        run: npm run size:check || true
      - name: Security Audit (prod deps)
        run: npm run security:audit || true
      - name: Start Server (background)
        run: |
          node simple-server.cjs &
          echo $! > server.pid
          sleep 2
      - name: Readiness Report (strict)
        env:
          READINESS_MIN: 65
        run: |
          node scripts/readiness-report.cjs
      - name: Stop Server
        if: always()
        run: |
          if [ -f server.pid ]; then kill $(cat server.pid) || true; fi
      - name: Validate SEO Assets
        run: |
          test -f sitemap.xml || (echo "sitemap.xml missing" && exit 1)
          test -f robots.txt || (echo "robots.txt missing" && exit 1)
          grep -q "Sitemap:" robots.txt || (echo "robots.txt missing Sitemap reference" && exit 1)
          test -f sitemap-index.xml || (echo "sitemap-index.xml missing" && exit 1)
          # Ensure excluded slugs are not present
          if grep -q "/programs/cpr" sitemap-index.xml sitemaps/*.xml; then
            echo "ERROR: Excluded slug /programs/cpr found in sitemaps" && exit 1
          fi
          echo "SEO asset validation passed (index + exclusion)"
      - name: Summary
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "Version: $(node -p "require('./package.json').version")" >> $GITHUB_STEP_SUMMARY
          echo "Git SHA: ${GITHUB_SHA::12}" >> $GITHUB_STEP_SUMMARY
      - name: Lighthouse (static)
        run: |
          npm run ci:lh

  deploy:
    needs: build-test
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0
          cache: npm
      - name: Install Dependencies
        run: npm ci --prefer-offline --no-audit
      - name: Deploy Placeholder
        if: ${{ secrets.DEPLOY_PROVIDER_TOKEN != '' }}
        env:
          CANONICAL_DOMAIN: ${{ secrets.CANONICAL_DOMAIN }}
        run: |
          echo "Pretend deploy triggered (add real deploy commands here)." \
            && echo "Domain: ${CANONICAL_DOMAIN:-unset}" \
            && echo "Deploy SHA: ${GITHUB_SHA}" \
            && echo "Deployment complete." 
      - name: Prisma Migrate (if DB URL present)
        if: ${{ secrets.DATABASE_URL != '' }}
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          npx prisma migrate deploy || echo 'No migrations or prisma not configured'
      - name: Ping Sitemaps (Google/Bing)
        if: ${{ secrets.CANONICAL_DOMAIN != '' }}
        env:
          CANONICAL_DOMAIN: ${{ secrets.CANONICAL_DOMAIN }}
        run: |
          echo "Pinging sitemap index..." 
          node scripts/ping-sitemaps.js || echo "Non-fatal sitemap ping issue"