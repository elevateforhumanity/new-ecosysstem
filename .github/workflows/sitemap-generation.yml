name: Automated Sitemap Generation

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment after generation'
        required: false
        default: 'true'
        type: boolean
      notify_search_engines:
        description: 'Notify search engines'
        required: false
        default: 'true'
        type: boolean

env:
  NODE_VERSION: '20'
  BASE_URL: 'https://www.elevateforhumanity.org'
  OUTPUT_DIR: './deploy'

jobs:
  generate-sitemap:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci --only=production
        # Install any additional dependencies for sitemap generation
        npm install --no-save

    - name: Create logs directory
      run: mkdir -p logs

    - name: Generate sitemaps
      run: |
        echo "üöÄ Starting sitemap generation..."
        node scripts/generate-sitemap.js
      env:
        BASE_URL: ${{ env.BASE_URL }}
        OUTPUT_DIR: ${{ env.OUTPUT_DIR }}
        DATA_FILE: './data/seeds/all-programs.json'

    - name: Validate generated sitemaps
      run: |
        echo "üîç Validating generated sitemaps..."
        
        # Check if sitemap.xml exists
        if [ ! -f "$OUTPUT_DIR/sitemap.xml" ]; then
          echo "‚ùå Main sitemap.xml not found"
          exit 1
        fi
        
        # Check XML validity
        if command -v xmllint &> /dev/null; then
          xmllint --noout "$OUTPUT_DIR/sitemap.xml" && echo "‚úÖ Main sitemap is valid XML"
          
          # Validate program sitemaps
          for sitemap in "$OUTPUT_DIR"/sitemap-programs-*.xml; do
            if [ -f "$sitemap" ]; then
              xmllint --noout "$sitemap" && echo "‚úÖ $(basename "$sitemap") is valid XML"
            fi
          done
        else
          echo "‚ö†Ô∏è xmllint not available, skipping XML validation"
        fi
        
        # Count URLs
        TOTAL_URLS=$(grep -c "<loc>" "$OUTPUT_DIR"/*.xml || echo "0")
        echo "üìä Total URLs in sitemaps: $TOTAL_URLS"
        
        # Check file sizes
        echo "üìÅ Generated files:"
        ls -lh "$OUTPUT_DIR"/*.xml

    - name: Deploy to Netlify
      if: github.event_name == 'schedule' || github.event.inputs.force_deploy == 'true'
      run: |
        echo "üì§ Deploying sitemaps to Netlify..."
        
        # Check if Netlify CLI is available or use deploy script
        if [ -f "./cloudflare-deploy.sh" ]; then
          chmod +x ./cloudflare-deploy.sh
          ./cloudflare-deploy.sh
        else
          echo "‚ö†Ô∏è No deployment script found"
        fi
      env:

    - name: Notify search engines
      if: github.event_name == 'schedule' || github.event.inputs.notify_search_engines == 'true'
      run: |
        echo "üîî Notifying search engines..."
        
        SITEMAP_URL="${BASE_URL}/sitemap.xml"
        
        # IndexNow notification
        if [ -n "$INDEXNOW_KEY" ]; then
          curl -s "https://api.indexnow.org/indexnow?url=${SITEMAP_URL}&key=${INDEXNOW_KEY}" \
            && echo "‚úÖ IndexNow notification sent" \
            || echo "‚ö†Ô∏è IndexNow notification failed"
        fi
        
        # Google Search Console ping
        curl -s "https://www.google.com/ping?sitemap=${SITEMAP_URL}" \
          && echo "‚úÖ Google Search Console pinged" \
          || echo "‚ö†Ô∏è Google ping failed"
        
        # Bing Webmaster Tools ping
        curl -s "https://www.bing.com/ping?sitemap=${SITEMAP_URL}" \
          && echo "‚úÖ Bing Webmaster Tools pinged" \
          || echo "‚ö†Ô∏è Bing ping failed"
      env:
        INDEXNOW_KEY: ${{ secrets.INDEXNOW_KEY }}

    - name: Upload sitemap artifacts
      uses: actions/upload-artifact@v4
      with:
        name: generated-sitemaps
        path: |
          ${{ env.OUTPUT_DIR }}/*.xml
          logs/sitemap-automation.log
        retention-days: 30

    - name: Create deployment summary
      run: |
        echo "## üó∫Ô∏è Sitemap Generation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Generated at:** $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "**Base URL:** $BASE_URL" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "$OUTPUT_DIR/sitemap.xml" ]; then
          TOTAL_URLS=$(grep -c "<loc>" "$OUTPUT_DIR"/*.xml || echo "0")
          SITEMAP_COUNT=$(ls "$OUTPUT_DIR"/sitemap*.xml | wc -l)
          
          echo "**Statistics:**" >> $GITHUB_STEP_SUMMARY
          echo "- Total sitemaps: $SITEMAP_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- Total URLs: $TOTAL_URLS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "**Generated files:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -lh "$OUTPUT_DIR"/*.xml >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ùå **Error:** No sitemaps were generated" >> $GITHUB_STEP_SUMMARY
        fi

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: generate-sitemap
    if: failure()
    
    steps:
    - name: Notify on failure
      run: |
        echo "‚ùå Sitemap generation failed"
        echo "Check the workflow logs for details"
        # Add notification logic here (Slack, email, etc.)