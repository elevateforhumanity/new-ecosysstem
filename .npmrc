fund=false
audit=false
legacy-peer-deps=false
engine-strict=false

# ------------------------------
# package.json (patch)
# ------------------------------
{
  "name": "elevateforhumanity",
  "version": "1.0.0",
  "private": true,
  "engines": { "node": "18.x" },
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "preview": "vite preview",
    "postbuild": "node scripts/postbuild.mjs"
  },
  "dependencies": {
    "react-helmet-async": "^2.0.5"
  },
  "devDependencies": {
    "sitemap": "^7.1.2"
  }
}

# -------------------------------------------------
# .env.example (new) â€” copy to .env on local/CI
# -------------------------------------------------
# Site
VITE_SITE_URL=https://elevateforhumanity.org
VITE_SITE_NAME=Elevate for Humanity
VITE_SITE_DEFAULT_TITLE=Elevate for Humanity
VITE_SITE_DEFAULT_DESC=We elevate human potential through mentorship, education, and community.
VITE_SITE_TWITTER=@ElevateHumanity
VITE_SITE_OG_IMAGE=/og-default.jpg

# Analytics (set any subset)
VITE_GA_MEASUREMENT_ID=G-XXXXXXXXXX
VITE_PLAUSIBLE_DOMAIN=elevateforhumanity.org
VITE_POSTHOG_KEY=
VITE_POSTHOG_HOST=https://us.posthog.com
VITE_VERCEL_ANALYTICS=1

# Search verification (either meta or file based)
VITE_GOOGLE_SITE_VERIFICATION=
VITE_BING_SITE_VERIFICATION=
VITE_YANDEX_SITE_VERIFICATION=
VITE_FACEBOOK_DOMAIN_VERIFICATION=
VITE_PINTEREST_SITE_VERIFICATION=

# Optional: create verification files in dist/
# Comma-separated list of file specs: filename|content
# Example: google1234567890abcdef.html|google-site-verification: google1234567890abcdef.html
VERIFICATION_FILES=

# ------------------------------
# vercel.json (patch or create)
# ------------------------------
{
  "$schema": "https://openapi.vercel.sh/vercel.json",
  "version": 2,
  "builds": [],
  "routes": [
    { "src": "/sitemap.xml", "dest": "/sitemap.xml" },
    { "src": "/robots.txt", "dest": "/robots.txt" }
  ],
  "headers": [
    { "source": "/(.*)", "headers": [
      { "key": "X-Frame-Options", "value": "SAMEORIGIN" },
      { "key": "X-Content-Type-Options", "value": "nosniff" },
      { "key": "Referrer-Policy", "value": "strict-origin-when-cross-origin" },
      { "key": "Permissions-Policy", "value": "geolocation=(), microphone=(), camera=()" }
    ]}
  ]
}

# -------------------------------------------------
# src/lib/seo/SeoProvider.tsx (new)
# -------------------------------------------------
import { HelmetProvider } from 'react-helmet-async';
import type { PropsWithChildren } from 'react';

export function SeoProvider({ children }: PropsWithChildren) {
  return <HelmetProvider>{children}</HelmetProvider>;
}

# -------------------------------------------------
# src/lib/seo/SEO.tsx (new)
# -------------------------------------------------
import { Helmet } from 'react-helmet
