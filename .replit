modules = ["nodejs-20", "postgresql-16", "python-3.11"]
run = "bash -lc '(cd client && npm run quick) || echo \"[WARN] quick build failed — serving last dist\"; npm run start'"

[deployment]
run = ["sh", "-c", "npm run build && npm run start"]
deploymentTarget = "cloudrun"

[nix]
channel = "stable-25_05"
packages = ["jq", "zip"]

[[ports]]
localPort = 5000
externalPort = 80

[workflows]
runButton = "EFH Replit Server"

[[workflows.workflow]]
name = "EFH Replit Server"
mode = "sequential"
author = 46393221

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "bash -lc '(cd client && npm run quick) || echo \"[WARN] quick build failed — serving last dist\"; npm run start'"

[[workflows.workflow]]
name = "Validate Production Readiness"
author = 46393221
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run validate"

[[workflows.workflow]]
name = "Backend API Server"
author = 46393221
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node backend-api.js"

[[workflows.workflow]]
name = "Optimize Storage"
author = 46393221
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tools/storage-optimizer.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node asset-cache-manager.js"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node tools/image-optimizer.js"
