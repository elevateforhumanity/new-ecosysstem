Perfect âœ… â€” hereâ€™s the one-paste setup block for your Replit shell. This sets up R2 + GitHub + Vercel all at once, then runs your migration script.


---

ðŸ”¹ Copy/paste into Replit (replace placeholders only for keys/repo/token)

# --- Cloudflare R2 (storage for assets & full archive) ---
export S3_BUCKET="efh-archive"
export S3_ENDPOINT="https://6ba1d2a52a3fa230972960db307ac7c0.r2.cloudflarestorage.com"
export AWS_ACCESS_KEY_ID="YOUR_R2_ACCESS_KEY_ID"
export AWS_SECRET_ACCESS_KEY="YOUR_R2_SECRET_ACCESS_KEY"
export AWS_DEFAULT_REGION="auto"

# --- GitHub (code only, clean repo for Vercel) ---
export GIT_REMOTE="https://github.com/YOUR_USERNAME/YOUR_REPO.git"
# Example: https://github.com/elevateforhumanity/efh-platform.git
# (If you use a PAT: https://YOUR_USERNAME:YOUR_PAT@github.com/YOUR_USERNAME/YOUR_REPO.git)

# --- Vercel (hosting) ---
export VERCEL_TOKEN="YOUR_VERCEL_TOKEN"          # create at vercel.com/account/tokens
export VERCEL_PROJECT_NAME="YOUR_PROJECT_NAME"   # optional: only if you want to force project name

# --- Domains ---
export ROOT_DOMAIN="elevateforhumanity.org"      # main domain
export PRIMARY_DOMAIN="root"                     # 'root' (=example.com) or 'www'
export APP_SUBDOMAIN="app"                       # will be app.elevateforhumanity.org
export DURABLE_TARGET="<paste_durable_dns_target_if_known>"

# --- Run the migration ---
./efh_migrate.sh


---

ðŸ”¹ What happens when you run it

1. Replit: Packages your project into

code-only-YYYYMMDD.tar.gz

assets-only-YYYYMMDD.tar.gz



2. Cloudflare R2: Uploads both archives into bucket efh-archive.


3. GitHub: Unpacks clean code and pushes it to your repo (main branch).


4. Vercel: Deploys from GitHub, links domains, and prints DNS records to add.


5. Durable: Youâ€™ll just set DNS later (script will remind you).




---

âœ… After it runs successfully, you can check:

R2 files:

aws s3 ls s3://efh-archive/ --endpoint-url $S3_ENDPOINT

GitHub repo: visit your repo, make sure code is clean (no node_modules, no assets).

Vercel deploy: it should auto-deploy and print a live URL.

DNS: the script will print the exact records to add at your registrar (root, www, app).



---

ðŸ‘‰ Do you want me to also prepare the Durable-specific DNS block (so when youâ€™re ready, you can point www or root straight to Durable while keeping app on Vercel)?

